# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches:
      - main
      - Ratan
      - Ravi_teja
      - sai_kumar
      - vardhani
      - dedeepya
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Test with pytest
#       run: |
#         python3 -m pytest
#     - name: Generate coverage Report
#       run: |
#         pip install coverage
#         coverage run -m pytest
#     - name: Upload Coverage to Codecov
#       uses: codecov/codecov-action@v2
  
  autoyapf:
     runs-on: ubuntu-latest
     steps:
       - uses: actions/checkout@main
         with:
           ref: ${{ github.head_ref }}
       - name: autoyapf
         uses: mritunjaysharma394/autoyapf@v2
         with:
           args: --style pep8 --recursive --in-place .
       - name: Check for modified files
         id: git-check
         run: echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)
       - name: Push changes
         if: steps.git-check.outputs.modified == 'true'
         run: |
           git config --global user.name 'dedeepya nelluru'
           git config --global user.email 'dnellur@ncsu.edu'
           git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
           git commit -am "Automated autoyapf fixes"
           git push
